
name: Build and deploy

on:
  workflow_call:
    inputs:
      env:
        required: true
        type: string
    
env:
  ENV: ${{inputs.env}}
  NODE_VERSION: '18.x'

jobs:
  terraform:
   name: "Terraform"
   runs-on: ubuntu-latest
   defaults:
     run:
       shell: bash
       working-directory: ./infra/aws/terraform
 
   steps:
     - name: Checkout the repository to the runner
       uses: actions/checkout@v4

     - name: Configure AWS credentials
       uses: aws-actions/configure-aws-credentials@v2
       with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: us-east-1

     - name: Create backend.conf file
       run: |
         chmod +x ../scripts/create-backend-conf.sh
         ../scripts/create-backend-conf.sh ${{ vars.APP_NAME }} ${{ env.ENV }}

     - name: Setup Terraform with specified version on the runner
       uses: hashicorp/setup-terraform@v3
    
     - name: Terraform init
       id: init
       run: terraform init -backend-config=backend.conf

     - uses: terraform-linters/setup-tflint@v3
       name: Setup TFLint
         
     - name: Run TFLint
       run: tflint -f compact
 
     - name: Terraform Apply
       run: terraform apply -var env=${{ env.ENV }} -var app_name=${{ vars.APP_NAME }} -auto-approve

  deploy:
    name: 'Build and deploy'
    runs-on: ubuntu-latest
    needs: terraform
    defaults:
      run:
        shell: bash
        working-directory: ./
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Checkout source code
        run: npm install
      - name: Checkout source code
        run: npm run build
      - name: Generate deployment package
        run: zip -r deploy.zip . -x '*.git*'
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ vars.APP_NAME }} 
          environment_name: eb-env-${{ vars.APP_NAME }}-${{ env.ENV }}
          version_label: ${{ github.sha }}
          region: us-east-1
          deployment_package: deploy.zip

  #     - name: dotnet build and publish
  #       run: |
  #         dotnet restore
  #         dotnet build --configuration Release
  #         dotnet publish -c Release -o ./

  #     - name: 'Run Azure webapp deploy action'
  #       run: az webapp up --name app-svc-${{ vars.APP_NAME }}-${{ env.ENV }} --os-type linux
  
  #       # uses: azure/webapps-deploy@v3
  #       # with: 
  #       #   app-name: 'app-svc-mytestapp-prod'
  #       #   package: .
          

      

          

